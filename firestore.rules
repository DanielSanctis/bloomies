rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() &&
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Users collection
    match /users/{userId} {
      // Users can read and update their own profiles
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Products collection
    match /products/{productId} {
      // Anyone can read products
      allow read: if true;
      // Only admins can create, update, or delete products
      allow write: if isAdmin();
    }

    // Orders collection
    match /orders/{orderId} {
      // Users can read their own orders, admins can read all
      allow read: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid || isAdmin());
      // Users can create orders
      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid;
      // Only admins can update orders
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Carts collection
    match /carts/{userId} {
      // Users can read and write their own carts
      allow read, write: if isOwner(userId);
    }

    // Wishlists collection
    match /wishlists/{userId} {
      // Users can read and write their own wishlists
      allow read, write: if isOwner(userId);
    }

    // Admins collection
    match /admins/{userId} {
      // Only admins can read the admins collection
      allow read: if isAdmin();
      // No one can write to the admins collection through the client
      // (This should be managed through Firebase Console or admin SDK)
      allow write: if false;
    }
  }
}
