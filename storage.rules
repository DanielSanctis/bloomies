rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() &&
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Product images
    match /product-images/{imageId} {
      // Anyone can read product images
      allow read: if true;
      // Only admins can upload, update, or delete product images
      allow write: if isAdmin();
    }

    // User profile images
    match /profile-images/{userId} {
      // Users can read their own profile images, admins can read all
      allow read: if isOwner(userId) || isAdmin() || true;
      // Users can upload their own profile images
      allow create, update: if isOwner(userId);
      // Only admins can delete profile images
      allow delete: if isAdmin();
    }

    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
